{"ast":null,"code":"var _jsxFileName = \"E:\\\\workspace\\\\reactjs\\\\my-project-01-vote-for-me\\\\CNPMM_Vote-For-Me\\\\twitter-project\\\\front-end\\\\src\\\\components\\\\PostItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport AppContext from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostItem({\n  post\n}) {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(AppContext);\n  const [postToEdit, setPostToEdit] = useState(post);\n  const [openEditForm, setOpenEditForm] = useState(false);\n  const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false);\n\n  const updatePost = async () => {\n    try {\n      setOpenEditForm(false);\n      const token = localStorage.getItem(\"token\");\n      const option = {\n        method: \"put\",\n        url: `/api/v1/posts/${post._id}`,\n        data: postToEdit,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      await axios(option);\n      dispatch({\n        type: \"UPDATE_ONE_POST\",\n        payload: { ...postToEdit\n        }\n      });\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const deletePost = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const option = {\n        method: \"delete\",\n        url: `/api/v1/posts/${post._id}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      await axios(option);\n      dispatch({\n        type: \"DELETE_ONE_POST\",\n        payload: {\n          _id: post._id\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let date = new Date(post.createdAt);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-content\",\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-infors\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"by \", post.author.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Date:\", \" \", `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), post.isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-edit-delete\",\n        children: openDeleteConfirm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"delete-question\",\n            children: \"Are you sure?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => deletePost(post._id),\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setOpenDeleteConfirm(false),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setOpenEditForm(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => setOpenDeleteConfirm(true),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), openEditForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-edit-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"content\",\n          id: \"content\",\n          className: \"content\",\n          placeholder: \"What's happening?\",\n          value: postToEdit.content,\n          onChange: e => setPostToEdit({ ...postToEdit,\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"button\",\n            onClick: () => updatePost(postToEdit),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"button\",\n            onClick: () => setOpenEditForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostItem, \"ofO4gyllrvMQWsCGMl+UhRcOUnE=\");\n\n_c = PostItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["E:/workspace/reactjs/my-project-01-vote-for-me/CNPMM_Vote-For-Me/twitter-project/front-end/src/components/PostItem.js"],"names":["React","useContext","useState","axios","AppContext","PostItem","post","dispatch","postToEdit","setPostToEdit","openEditForm","setOpenEditForm","openDeleteConfirm","setOpenDeleteConfirm","updatePost","token","localStorage","getItem","option","method","url","_id","data","headers","Authorization","type","payload","error","console","log","response","deletePost","date","Date","createdAt","content","author","name","getDate","getMonth","getFullYear","isEditable","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\n\r\nimport axios from 'axios';\r\nimport AppContext from './AppContext';\r\n\r\nexport default function PostItem({post}) {\r\n    const {dispatch} = useContext(AppContext)\r\n    const [postToEdit, setPostToEdit] = useState(post);\r\n    const [openEditForm, setOpenEditForm] = useState(false)\r\n    const [openDeleteConfirm, setOpenDeleteConfirm] = useState(false)\r\n    const updatePost = async () => {\r\n        try{\r\n            setOpenEditForm(false);\r\n            const token = localStorage.getItem(\"token\");\r\n            const option = {\r\n                method: \"put\",\r\n                url: `/api/v1/posts/${post._id}`,\r\n                data: postToEdit,\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n            await axios(option);\r\n            dispatch({\r\n                type:  \"UPDATE_ONE_POST\",\r\n                payload: {...postToEdit},\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n        }\r\n    };\r\n\r\n    const deletePost = async () => {\r\n        try{\r\n            const token = localStorage.getItem(\"token\");\r\n            const option = {\r\n                method: \"delete\",\r\n                url: `/api/v1/posts/${post._id}`,\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n            await axios(option);\r\n            dispatch({\r\n                type:  \"DELETE_ONE_POST\",\r\n                payload: {_id: post._id},\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    let date = new Date(post.createdAt);\r\n\r\n    return (\r\n        <div className=\"post-item\">\r\n        <p className=\"post-content\">\r\n            {post.content}\r\n        </p>\r\n        <div className=\"post-footer\">\r\n            <div className=\"post-infors\">\r\n                <span>by {post.author.name}</span>\r\n                <span>\r\n                    Date:\r\n                    {\" \"}\r\n                    {`${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`}\r\n                </span>\r\n            </div>\r\n            {post.isEditable && (\r\n                <div className=\"post-edit-delete\">\r\n                    {openDeleteConfirm ? (\r\n                        <>\r\n                            <span className=\"delete-question\">Are you sure?</span>\r\n                            <span onClick={() => deletePost(post._id)}>Yes</span>\r\n                            <span onClick={() => setOpenDeleteConfirm(false)}>No</span>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <span onClick={() => setOpenEditForm(true)}>Edit</span>\r\n                            <span onClick={() => setOpenDeleteConfirm(true)}>Delete</span>\r\n                            \r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n        {openEditForm && (\r\n            <div className=\"post-edit-form\">\r\n            <form className=\"edit-form\">\r\n                <textarea\r\n                    type=\"text\"\r\n                    name=\"content\"\r\n                    id=\"content\"\r\n                    className=\"content\"\r\n                    placeholder=\"What's happening?\"\r\n                    value={postToEdit.content}\r\n                    onChange={(e) =>\r\n                        setPostToEdit({ ...postToEdit, content: e.target.value })\r\n                    }\r\n                ></textarea>\r\n                <div className=\"btn-container\">\r\n                    <button \r\n                        className=\"btn\"\r\n                        type=\"button\"\r\n                        onClick={() => updatePost(postToEdit)}>Update</button>\r\n                    <button \r\n                        className=\"btn\"\r\n                        type=\"button\"\r\n                        onClick={() => setOpenEditForm(false)}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        )}\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}