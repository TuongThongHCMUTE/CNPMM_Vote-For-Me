{"ast":null,"code":"var _jsxFileName = \"E:\\\\workspace\\\\reactjs\\\\my-project-01-vote-for-me\\\\CNPMM_Vote-For-Me\\\\twitter-project\\\\front-end\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport '../css/Form.css';\nimport axios from 'axios';\nimport AppContext from './AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const {\n    user\n  } = state;\n  const [postInput, setPostInput] = useState({\n    content: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const onSubmitHandle = async e => {\n    try {\n      e.preventDefault();\n      console.log(postInput);\n      const token = localStorage.getItem(\"token\");\n      const option = {\n        method: 'post',\n        url: '/api/v1/posts/',\n        data: postInput,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      console.log(postInput);\n      const response = await axios(option); // Destructering\n\n      const {\n        post\n      } = response.data.data;\n      const author = {\n        _id: post.author,\n        name: user.userName\n      };\n      dispatch({\n        type: \"CREATE_ONE_POST\",\n        payload: { ...post,\n          author,\n          isEditable: true\n        }\n      }); // Reset post\n\n      setPostInput({\n        content: \"\"\n      });\n    } catch (error) {\n      setErrorMessage(error.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form-section\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSubmitHandle,\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Error: \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"content\",\n        id: \"content\",\n        className: \"content\",\n        placeholder: \"What's happening?\",\n        value: postInput.content,\n        onChange: e => setPostInput({ ...postInput,\n          [e.target.name]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"Kbq64/Ig2yGltbmhQsOKPUdmIBk=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["E:/workspace/reactjs/my-project-01-vote-for-me/CNPMM_Vote-For-Me/twitter-project/front-end/src/components/Form.js"],"names":["React","useContext","useState","axios","AppContext","Form","state","dispatch","user","postInput","setPostInput","content","errorMessage","setErrorMessage","onSubmitHandle","e","preventDefault","console","log","token","localStorage","getItem","option","method","url","data","headers","Authorization","response","post","author","_id","name","userName","type","payload","isEditable","error","message","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport '../css/Form.css';\r\nimport axios from 'axios';\r\nimport AppContext from './AppContext';\r\n\r\n\r\nexport default function Form() {\r\n    const {state, dispatch} = useContext(AppContext)\r\n    const {user} = state;\r\n    const [postInput, setPostInput] = useState({ content: \"\" });\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const onSubmitHandle = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n\r\n            console.log(postInput);\r\n            \r\n            const token = localStorage.getItem(\"token\");\r\n            const option = {\r\n                method: 'post',\r\n                url: '/api/v1/posts/',\r\n                data: postInput,\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            };\r\n\r\n            console.log(postInput);\r\n\r\n            const response = await axios(option);\r\n\r\n            // Destructering\r\n            const {post} = response.data.data;\r\n            const author = { _id: post.author, name: user.userName };\r\n            dispatch({\r\n                type: \"CREATE_ONE_POST\",\r\n                payload: { ...post, author, isEditable: true},\r\n            });\r\n\r\n            // Reset post\r\n            setPostInput({ content: \"\" });\r\n        } catch (error){\r\n            setErrorMessage(error.response.data.message);\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"form-section\">\r\n            <form className=\"form\" onSubmit={onSubmitHandle}>\r\n                {errorMessage && (\r\n                    <div className=\"error-message\">Error: {errorMessage}</div>\r\n                )}\r\n                <textarea\r\n                    type=\"text\"\r\n                    name=\"content\"\r\n                    id=\"content\"\r\n                    className=\"content\"\r\n                    placeholder=\"What's happening?\"\r\n                    value = {postInput.content}\r\n                    onChange = {(e) => \r\n                        setPostInput({ ...postInput, [e.target.name]: e.target.value })    \r\n                    }\r\n                ></textarea>\r\n                <button className=\"btn\" type=\"submit\">Tweet</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}